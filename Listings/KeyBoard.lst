C51 COMPILER V9.54   KEYBOARD                                                              08/27/2015 17:32:00 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE KEYBOARD
OBJECT MODULE PLACED IN .\Objects\KeyBoard.obj
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE KeyBoard.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\Key
                    -Board.lst) OBJECT(.\Objects\KeyBoard.obj)

line level    source

   1           /* 
   2           ******************************************
   3                                  4*4 矩阵按键驱动模块
   4           ******************************************
   5           */
   6          
   7          #include<reg52.h>
   8           
   9          #define uchar unsigned char
  10          #define ulong unsigned long
  11          
  12          sbit KEY_IN1 = P2^4;
  13          sbit KEY_IN2 = P2^5;
  14          sbit KEY_IN3 = P2^6;
  15          sbit KEY_IN4 = P2^7;
  16          sbit KEY_OUT1 = P2^3;
  17          sbit KEY_OUT2 = P2^2;
  18          sbit KEY_OUT3 = P2^1;
  19          sbit KEY_OUT4 = P2^0;
  20          
  21          uchar code KeycodeMap[4][4] = { 
  22                                                                                                                                          { 0x31, 0x32, 0x33, 0x26 }, //数字键1、数字键2、数字键3、向上键
  23                                                                                                                                          { 0x34, 0x35, 0x36, 0x25 }, //数字键4、数字键5、数字键6、向左键
  24                                                                                                                                          { 0x37, 0x38, 0x39, 0x28 }, //数字键7、数字键8、数字键9、向下键
  25                                                                                                                                          { 0x30, 0x1B, 0x0D, 0x27 }  //数字键0、ESC键、  回车键、 向右键
  26                                                                                                                           };                     // 按键区
  27          
  28          uchar pdata Keysta[4][4] = { {1,1,1,1},{1,1,1,1},{1,1,1,1},{1,1,1,1} };         // 按键判断
  29                  
  30          extern void KeyAction(uchar keycode);
  31                  
  32          void KeyDriver()                        // 判断按键是否按下_函数
  33          {
  34   1              extern void KeyAction(uchar keycode);
  35   1              
  36   1              uchar i,j;
  37   1       
  38   1              static uchar pdata backup[4][4] = {  {1,1,1,1},{1,1,1,1},{1,1,1,1},{1,1,1,1}    };
  39   1              
  40   1              for(i = 0; i < 4; i++)
  41   1                              for(j = 0; j < 4; j++)
  42   1                                              {
  43   2                                                      if(Keysta[i][j] != backup[i][j])
  44   2                                                      {
  45   3                                                                      if(backup[i][j] != 0)
  46   3                                                                      {
  47   4                                                                                      KeyAction(KeycodeMap[i][j]);
  48   4                                                                      }
  49   3                                                              backup[i][j] = Keysta[i][j];
  50   3                                                      }
  51   2                                              }
  52   1      }
  53          
  54          void Keyscan()                          //按键扫描__函数
C51 COMPILER V9.54   KEYBOARD                                                              08/27/2015 17:32:00 PAGE 2   

  55          {
  56   1       uchar i;
  57   1       static uchar keyout = 0;
  58   1       static uchar keybuf[4][4] = {
  59   1                                                                                                                                      {0XFF,0XFF,0XFF,0XFF},{0XFF,0XFF,0XFF,0XFF},
  60   1                                                                                                                                      {0XFF,0XFF,0XFF,0XFF},{0XFF,0XFF,0XFF,0XFF}
  61   1                                                                                                                              };
  62   1       
  63   1      keybuf[keyout][0] = (keybuf[keyout][0] << 1) | KEY_IN1;
  64   1      keybuf[keyout][1] = (keybuf[keyout][1] << 1) | KEY_IN2;
  65   1      keybuf[keyout][2] = (keybuf[keyout][2] << 1) | KEY_IN3;
  66   1      keybuf[keyout][3] = (keybuf[keyout][3] << 1) | KEY_IN4;
  67   1      
  68   1      for(i = 0; i < 4; i++)
  69   1              if((keybuf[keyout][i] & 0X0F) == 0X00)
  70   1              {
  71   2                              Keysta[keyout][i] = 0;
  72   2              }
  73   1              else if((keybuf[keyout][i] & 0X0F) == 0x0F)
  74   1              {
  75   2                              Keysta[keyout][i] = 1;
  76   2              }
  77   1              else ;
  78   1              
  79   1              keyout++;
  80   1              keyout = keyout & 0X03;                 // 满_4_化_0
  81   1              
  82   1              switch(keyout)
  83   1              {
  84   2                      case 0:
  85   2                              {KEY_OUT4 = 1; KEY_OUT1 = 0;}break;
  86   2                      case 1:
  87   2                              {KEY_OUT1 = 1; KEY_OUT2 = 0;}break;
  88   2                      case 2:
  89   2                              {KEY_OUT2 = 1; KEY_OUT3 = 0;}break;
  90   2                      case 3:
  91   2                              {KEY_OUT3 = 1; KEY_OUT4 = 0;}break;
  92   2                      default: break;
  93   2              }
  94   1       
  95   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    326    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =     32    ----
   DATA SIZE        =     17       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
